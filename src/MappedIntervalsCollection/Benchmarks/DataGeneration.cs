using System;
using System.Collections.Generic;
using Contract;

namespace Console.Benchmarks
{
    public enum DataSource
    {
        Glasses2 = 0,
        Spectrum,
    }

    public enum DataFilter
    {
        Raw = 0,
        IvtFixation,
        IvtAttention,
    }

    internal sealed class DataGeneration
    {
        private static readonly Dictionary<Tuple<DataSource, DataFilter>, Description> RealLikeGenerators = new Dictionary<Tuple<DataSource, DataFilter>, Description>
        {
            { Tuple.Create(DataSource.Glasses2, DataFilter.Raw),          new Description( 10,  10, 19, 20) },
            { Tuple.Create(DataSource.Glasses2, DataFilter.IvtAttention), new Description(100, 700, 18, 25) },
            { Tuple.Create(DataSource.Glasses2, DataFilter.IvtFixation),  new Description(120, 500, 40, 50) },

            { Tuple.Create(DataSource.Spectrum, DataFilter.Raw),          new Description(  2,    3,  2,  3) },
            { Tuple.Create(DataSource.Spectrum, DataFilter.IvtAttention), new Description(120, 1600, 10, 75) },
            { Tuple.Create(DataSource.Spectrum, DataFilter.IvtFixation),  new Description(120,  600, 15, 80) },
        };

        public static Tuple<long, long> LikeReal<TPayload>(DataSource dataSource, DataFilter dataFilter, Func<int, TPayload> makePayload, MappedInterval<TPayload>[] output)
        {
            if (RealLikeGenerators.TryGetValue(Tuple.Create(dataSource, dataFilter), out var description))
            {
                MakeSpacedIntervals(description, makePayload, output);
                return Tuple.Create(output[0].IntervalStart, output[output.Length - 1].IntervalEnd);
            }
            throw new ArgumentException(FormattableString.Invariant($"Can't find desired data generator for {dataSource}/{dataFilter}."), nameof(dataSource) + "/" + nameof(dataFilter));
        }

        public static Tuple<long, long> Fill<TPayload>(Sorting sorting, Overlapping overlapping, TPayload filler, MappedInterval<TPayload>[] output)
        {
            var count = output.Length;
            var start = 0L;
            var duration = 10L;
            var step = overlapping == Overlapping.Yes ? duration >> 1 : duration << 1;

            var min = long.MaxValue;
            var max = long.MinValue;

            switch (sorting)
            {
                case Sorting.Ascending:
                case Sorting.Descending:
                {
                    var from = sorting == Sorting.Ascending ? 0 : count - 1;
                    var to = sorting == Sorting.Ascending ? count : 0;
                    var delta = sorting == Sorting.Ascending ? 1 : -1;

                    while (from != to)
                    {
                        min = Math.Min(min, start);
                        max = Math.Max(max, start + duration);

                        output[from] = new MappedInterval<TPayload>(start, start + duration, filler);
                        start += step;
                        from += delta;
                    }

                    break;
                }
                case Sorting.Random:
                {
                    var durationFrom = (int)(duration - duration * 0.2);
                    var durationTo = (int)(duration + duration * 0.2);
                    var r = new Random(0xDEAD);
                    for (var i = 0; i < count; ++i)
                    {
                        var s = r.Next(0, int.MaxValue);
                        var d = r.Next(durationFrom, durationTo);
                        min = Math.Min(min, s);
                        max = Math.Max(max, s + d);
                        output[i] = new MappedInterval<TPayload>(s, s + d, filler);   
                    }

                    break;
                }
            }

            return Tuple.Create(min, max);
        }

        private static void MakeSpacedIntervals<TPayload>(Description description, Func<int, TPayload> makePayload, MappedInterval<TPayload>[] output)
        {
            var r = new Random(0xBADDAD);

            var start = MakeGap();
            for (var i = 0; i < output.Length; ++i)
            {
                start += MakeGap();
                var duration = MakeInterval();
                var from = ToUsec(start);
                var to = from + duration;
                output[i] = new MappedInterval<TPayload>(from, to, makePayload(i));
            }

            int MakeInterval() => r.Next(description.IntervalRange.Item1, description.IntervalRange.Item2);
            int MakeGap() => r.Next(description.GapRange.Item1, description.GapRange.Item2);
            long ToUsec(int msec) => msec * 1000 - r.Next(0, 3);
        }

        private sealed class Description
        {
            public Description(int intervalMin, int intervalMax, int gapMin, int gapMax)
            {
                IntervalRange = Tuple.Create(intervalMin, intervalMax);
                GapRange = Tuple.Create(gapMin, gapMax);
            }

            public Tuple<int, int> IntervalRange { get; }

            public Tuple<int, int> GapRange { get; }
        }
    }

    /*
        Scene camera 31 min recording, Spectrum 1200Hz, IVT attention
        count = 7168
        space_count = 2821
        fixation_count = 2822
        space_duration_min = 2 ms
        space_duration_max = 1976 ms
        fixation_duration_min = 60 ms
        fixation_duration_max = 14080 ms
        Space in-between durations:
        [-2147483648,           2) |   0 | 
        [          2,           3) |  42 | ******
        [          3,           4) |  39 | *****
        [          4,           5) |   0 | 
        [          5,           6) |  42 | ******
        [          6,           7) |   0 | 
        [          7,           9) |  97 | *************
        [          9,          11) |  77 | ***********
        [         11,          14) | 185 | **************************
        [         14,          17) | 127 | ******************
        [         17,          21) | 452 | ****************************************************************
        [         21,          26) | 397 | ********************************************************
        [         26,          32) | 286 | ****************************************
        [         32,          40) | 382 | ******************************************************
        [         40,          50) | 265 | *************************************
        [         50,          62) | 125 | *****************
        [         62,          77) |  71 | **********
        [         77,          96) |  40 | *****
        [         96,         119) |  33 | ****
        [        119,         148) |  21 | ***
        [        148,         184) |  41 | *****
        [        184,         228) |  53 | *******
        [        228,         283) |  26 | ***
        [        283,         351) |   6 | 
        [        351,         436) |   2 | 
        [        436,         541) |   5 | 
        [        541,         671) |   0 | 
        [        671,         833) |   0 | 
        [        833,        1034) |   1 | 
        [       1034,        1283) |   3 | 
        [       1283,        1592) |   1 | 
        [       1592,        1976) |   1 | 
        [       1976,  2147483647) |   1 | 

        Fixation durations:
        [-2147483648,          60) |   0 | 
        [         60,          72) |  11 | **
        [         72,          86) |  21 | *****
        [         86,         103) |  26 | ******
        [        103,         123) |  47 | ***********
        [        123,         147) | 115 | ****************************
        [        147,         175) | 160 | ****************************************
        [        175,         209) | 233 | **********************************************************
        [        209,         249) | 261 | *****************************************************************
        [        249,         297) | 243 | ************************************************************
        [        297,         354) | 221 | *******************************************************
        [        354,         422) | 190 | ***********************************************
        [        422,         503) | 236 | ***********************************************************
        [        503,         599) | 175 | *******************************************
        [        599,         714) | 151 | *************************************
        [        714,         851) | 156 | ***************************************
        [        851,        1014) | 128 | ********************************
        [       1014,        1208) | 110 | ***************************
        [       1208,        1440) | 100 | *************************
        [       1440,        1716) |  79 | *******************
        [       1716,        2045) |  60 | ***************
        [       2045,        2437) |  31 | *******
        [       2437,        2904) |  18 | ****
        [       2904,        3461) |  20 | *****
        [       3461,        4125) |   9 | **
        [       4125,        4916) |   4 | *
        [       4916,        5858) |   7 | *
        [       5858,        6981) |   4 | *
        [       6981,        8319) |   5 | *
        [       8319,        9914) |   0 | 
        [       9914,       11815) |   0 | 
        [      11815,       14080) |   0 | 
        [      14080,  2147483647) |   1 | 

        Scene camera 31 min recording, Spectrum 1200Hz, IVT fixation
        count = 10102
        space_count = 4015
        fixation_count = 4016
        space_duration_min = 2 ms
        space_duration_max = 2168 ms
        fixation_duration_min = 60 ms
        fixation_duration_max = 14023 ms
        Space in-between durations:
        [-2147483648,           2) |   0 | 
        [          2,           3) |  26 | **
        [          3,           4) |  14 | *
        [          4,           5) |   0 | 
        [          5,           6) |  17 | *
        [          6,           7) |   1 | 
        [          7,           9) |  49 | ****
        [          9,          11) |  40 | ****
        [         11,          14) |  86 | ********
        [         14,          17) |  82 | ********
        [         17,          21) | 438 | *******************************************
        [         21,          26) | 584 | **********************************************************
        [         26,          32) | 525 | ****************************************************
        [         32,          40) | 638 | ***************************************************************
        [         40,          50) | 640 | ****************************************************************
        [         50,          62) | 332 | *********************************
        [         62,          77) | 155 | ***************
        [         77,          96) |  73 | *******
        [         96,         120) |  78 | *******
        [        120,         150) |  71 | *******
        [        150,         187) |  42 | ****
        [        187,         234) |  54 | *****
        [        234,         292) |  37 | ***
        [        292,         365) |  12 | *
        [        365,         456) |   8 | 
        [        456,         570) |   4 | 
        [        570,         712) |   1 | 
        [        712,         890) |   1 | 
        [        890,        1112) |   2 | 
        [       1112,        1389) |   2 | 
        [       1389,        1735) |   2 | 
        [       1735,        2168) |   0 | 
        [       2168,  2147483647) |   1 | 

        Fixation durations:
        [-2147483648,          60) |   0 | 
        [         60,          72) |  28 | ****
        [         72,          86) |  33 | ****
        [         86,         103) |  63 | *********
        [        103,         123) | 125 | *****************
        [        123,         147) | 241 | **********************************
        [        147,         175) | 376 | *****************************************************
        [        175,         209) | 476 | ********************************************************************
        [        209,         249) | 472 | *******************************************************************
        [        249,         297) | 394 | ********************************************************
        [        297,         354) | 340 | ************************************************
        [        354,         422) | 306 | *******************************************
        [        422,         503) | 285 | ****************************************
        [        503,         599) | 207 | *****************************
        [        599,         714) | 163 | ***********************
        [        714,         851) | 149 | *********************
        [        851,        1014) |  93 | *************
        [       1014,        1208) |  79 | ***********
        [       1208,        1439) |  60 | ********
        [       1439,        1714) |  41 | *****
        [       1714,        2042) |  31 | ****
        [       2042,        2433) |  22 | ***
        [       2433,        2899) |  13 | *
        [       2899,        3454) |   9 | *
        [       3454,        4115) |   2 | 
        [       4115,        4903) |   1 | 
        [       4903,        5842) |   2 | 
        [       5842,        6960) |   1 | 
        [       6960,        8292) |   3 | 
        [       8292,        9879) |   0 | 
        [       9879,       11770) |   0 | 
        [      11770,       14023) |   0 | 
        [      14023,  2147483647) |   1 | 

        IVT attention on Glasses2, 30 min, 3 segments
        count = 10818
        space_count = 3866
        fixation_count = 3872
        space_duration_min = 10 ms
        space_duration_max = 3958 ms
        fixation_duration_min = 70 ms
        fixation_duration_max = 5787 ms
        Space in-between durations:
        [-2147483648,          10) |    0 | 
        [         10,          12) |  292 | *****************
        [         12,          15) |    0 | 
        [         15,          18) |    0 | 
        [         18,          22) | 1117 | *****************************************************************
        [         22,          27) |    0 | 
        [         27,          33) |  497 | *****************************
        [         33,          40) |    0 | 
        [         40,          48) |  645 | *************************************
        [         48,          58) |  226 | *************
        [         58,          70) |  222 | *************
        [         70,          85) |  231 | *************
        [         85,         103) |  168 | *********
        [        103,         125) |  115 | ******
        [        125,         151) |  108 | ******
        [        151,         183) |   77 | ****
        [        183,         222) |   48 | **
        [        222,         269) |   27 | *
        [        269,         326) |   14 | 
        [        326,         395) |   12 | 
        [        395,         479) |   11 | 
        [        479,         580) |    4 | 
        [        580,         703) |   12 | 
        [        703,         852) |   16 | 
        [        852,        1032) |    2 | 
        [       1032,        1250) |    8 | 
        [       1250,        1515) |    6 | 
        [       1515,        1836) |    5 | 
        [       1836,        2225) |    1 | 
        [       2225,        2696) |    0 | 
        [       2696,        3267) |    0 | 
        [       3267,        3958) |    1 | 
        [       3958,  2147483647) |    1 | 

        Fixation durations:
        [-2147483648,          70) |   0 | 
        [         70,          81) | 145 | *****************************
        [         81,          93) |  70 | **************
        [         93,         107) |  91 | ******************
        [        107,         123) | 182 | ************************************
        [        123,         142) | 171 | **********************************
        [        142,         164) | 199 | ***************************************
        [        164,         189) | 176 | ***********************************
        [        189,         218) | 284 | ********************************************************
        [        218,         251) | 374 | **************************************************************************
        [        251,         289) | 268 | *****************************************************
        [        289,         333) | 261 | ****************************************************
        [        333,         384) | 271 | ******************************************************
        [        384,         443) | 256 | ***************************************************
        [        443,         511) | 219 | *******************************************
        [        511,         589) | 202 | ****************************************
        [        589,         679) | 186 | *************************************
        [        679,         783) | 118 | ***********************
        [        783,         903) |  90 | ******************
        [        903,        1042) |  88 | *****************
        [       1042,        1202) |  72 | **************
        [       1202,        1387) |  67 | *************
        [       1387,        1600) |  26 | *****
        [       1600,        1846) |  12 | **
        [       1846,        2129) |  22 | ****
        [       2129,        2456) |   3 | 
        [       2456,        2833) |  11 | **
        [       2833,        3268) |   2 | 
        [       3268,        3770) |   2 | 
        [       3770,        4349) |   2 | 
        [       4349,        5017) |   1 | 
        [       5017,        5787) |   0 | 
        [       5787,  2147483647) |   1 | 

        IVT fixation on Glasses2, 30 min, 3 segments
        count = 14128
        space_count = 4432
        fixation_count = 4435
        space_duration_min = 10 ms
        space_duration_max = 5249 ms
        fixation_duration_min = 70 ms
        fixation_duration_max = 4227 ms
        Space in-between durations:
        [-2147483648,          10) |   0 | 
        [         10,          12) | 165 | ***************
        [         12,          15) |   0 | 
        [         15,          18) |   0 | 
        [         18,          22) | 675 | *************************************************************
        [         22,          27) |   0 | 
        [         27,          33) | 594 | ******************************************************
        [         33,          40) |   0 | 
        [         40,          49) | 721 | *****************************************************************
        [         49,          60) | 567 | ***************************************************
        [         60,          74) | 608 | *******************************************************
        [         74,          91) | 270 | ************************
        [         91,         111) | 163 | **************
        [        111,         136) | 109 | *********
        [        136,         167) | 113 | **********
        [        167,         205) | 129 | ***********
        [        205,         251) | 105 | *********
        [        251,         307) |  46 | ****
        [        307,         376) |  46 | ****
        [        376,         461) |  31 | **
        [        461,         565) |  17 | *
        [        565,         692) |  17 | *
        [        692,         847) |  15 | *
        [        847,        1037) |  10 | 
        [       1037,        1270) |   6 | 
        [       1270,        1555) |   8 | 
        [       1555,        1905) |   6 | 
        [       1905,        2333) |   1 | 
        [       2333,        2857) |   6 | 
        [       2857,        3499) |   2 | 
        [       3499,        4286) |   1 | 
        [       4286,        5249) |   0 | 
        [       5249,  2147483647) |   1 | 

        Fixation durations:
        [-2147483648,          70) |   0 | 
        [         70,          80) |  93 | ***************
        [         80,          91) | 223 | *************************************
        [         91,         104) |  99 | ****************
        [        104,         119) | 125 | ********************
        [        119,         136) | 252 | ******************************************
        [        136,         155) | 281 | **********************************************
        [        155,         177) | 306 | ***************************************************
        [        177,         202) | 433 | ************************************************************************
        [        202,         231) | 420 | **********************************************************************
        [        231,         264) | 315 | ****************************************************
        [        264,         301) | 338 | ********************************************************
        [        301,         344) | 255 | ******************************************
        [        344,         393) | 273 | *********************************************
        [        393,         448) | 213 | ***********************************
        [        448,         511) | 194 | ********************************
        [        511,         583) | 140 | ***********************
        [        583,         665) | 114 | *******************
        [        665,         759) |  87 | **************
        [        759,         866) |  73 | ************
        [        866,         988) |  58 | *********
        [        988,        1128) |  43 | *******
        [       1128,        1287) |  33 | *****
        [       1287,        1469) |  27 | ****
        [       1469,        1676) |   8 | *
        [       1676,        1913) |  13 | **
        [       1913,        2183) |   6 | *
        [       2183,        2491) |   5 | 
        [       2491,        2843) |   5 | 
        [       2843,        3245) |   1 | 
        [       3245,        3704) |   0 | 
        [       3704,        4227) |   1 | 
        [       4227,  2147483647) |   1 | 
    */
}